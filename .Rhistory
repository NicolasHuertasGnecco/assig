install.packages("shinny")
install.packages("ggplot2")
install.packages("devtools")
install.packages("shiny")
source("http://bioconductor.org/bioclite.R")
source("http://bioconductor.org/bioClite.R")
source("http://bioconductor.org/bioclite.R")
source("https://bioconductor.org/biocLite.R")
biocLite()
library(ggplot2)
library(shiny)
search()
install.packages("queueing")
library(queueing)
search()
install.packages("KernSmooth")
library(KernSmooth)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix()
x<-diag(1,3)
cacheSolve(x)
y<-makeCacheMatrix()
y$set(x)
y$get()
y$setinv(x)
y$getinv()
a<-diag(5,3)
cacheM<-makeCacheMatrix(a)
cacheSolve(cacheM)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
a<-diag(5,3) cacheM<-makeCacheMatrix(a)
> cacheSolve(cacheM)
a<-diag(5,3)
cacheM<-makeCacheMatrix(a)
cacheSolve(cacheM)
a<-diag(5,3)
cacheSolve(a)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
a<-diag(5,3)
cacheSolve(a)
a<-diag(6,3)
debug(cacheSolve)
cacheSolve(a)
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
x = rbind(c(1, -3/4), c(-3/4, 1))
m = makeCacheMatrix(x)
cacheSolve(m)
m$getinv()
debug(cacheSolve)
cacheSolve(m)
View(inv)
View(inv)
View(inv)
View(inv)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
cacheSolve(m)
debug(cacheSolve)
cacheSolve(m)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
cacheSolve(m)
debug(cacheSolve)
cacheSolve(m)
x<- diag(6,3)
l<-makeCacheMatrix(x)
l$get()
cacheSolve(l)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
cacheSolve(l)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
b<-diag(6,3)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
l<-makeCacheMatrix(b)
cacheSolve(l)
l$getinv()
debug(cacheSolve)
cacheSolve(l)
cacheSolve(l)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
cacheSolve(l)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
cacheSolve(l)
source('~/Desktop/c.R')
cacheSolve(l)
debug(cacheSolve)
cacheSolve(l)
l<-makeCacheMatrix(b)
cacheSolve(l)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
l<-makeCacheMatrix(b)
l
cacheSolve(l)
cacheSolve(l)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
cacheSolve(l)
l<-makeCacheMatrix(b)
cacheSolve(l)
cacheSolve(l)
b<- diag(4,5)
l<-makeCacheMatrix(b)
cacheSolve(l)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/ProgrammingAssignment2/cachematrix.R')
b<- diag(4,5)
l<-makeCacheMatrix(b)
cacheSolve(l)
str(l)
str(b)
str(lapply)
Rprof()
set.seed(1)
rpois(5, 2)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
library(swirl)
swirl()
install_from_swirl("R Programming")
swirls()
swirl()
head(flags)
dim(flags)
class(flags)?
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flg_colors<-flags[,11:17]
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
sapply(flag_shapes,range)
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
(c(3, 4, 5,5, 5, 6, 6))
unique((c(3, 4, 5,5, 5, 6, 6)))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(x)x[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flas$animate,flags$landmass,mean)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population,flags$landmass,summary)
data("cars")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed,y=cars$dist)
plot(cars)
plot(x = cars$dist, y = cars$speed)
plot(cars,xlab="Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab = "Stoping")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab = "Stoping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed",ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
plot(cars,main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl ,data = mtcars)
hist(mtcars$mpg)
ls
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,n=10)
tail(plants,n=15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
mydf<-read.csv(path2csv,stringsAsFactors = F)
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
package_version(dplyr)
package_version("dplyr")
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
size(X:size)
.5:20
-5:20
-5:-20
-(5:20)
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country== "US| country == "IN")
filter(cran, country== "US"| country == "IN")
filter(cran, size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(cran))
filter(cran,!is.na())
filter(cran,!is.na(all(row)))
filter(cran, size>100500,r_os=="linux-gnu")
filter(cran, !is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran2,c(ip_id,package,size))
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size-1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
crna
cran
?group_by
by_package<-group_by(cran,package)
by_package
summarise(by_package,mean(size))
submit
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts<-filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts,desc(count))
view(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filte(pack_sum,unique>465)
top_unique<-filter(pack_sum,unique>465)
view(top_unique)
View(top_unique)
top_unique_sorted<-arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit
submit  ()
submit  ()
libÂºtidyr
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
gather(students2)
gather(students2,sex_class,count,-grader)
res<- gather(students2,sex_class,count,-grade)
res
?separate
separate(data=res,col=sex_class,into=c("sex","class"))
submit()
students3
submit()
?spread
submit()
library(readr)
parae_number("class5")
parse_number("class5")
submit()
students3 %>%
gather(class, grade, class1:class5, na.rm = TRUE) %>%
spread(test, grade) %>%
mutate(class = parse_number(class))
submit()
submit()
students4
submit()
submit()
submit()
View(student_info)
View(student_info)
passed
failed
mutate(passed,status="passed")
passed <- passed %>% mutate(status = "passed")
failed<-failes%<%mutate(status="failed")
failed<-failes%>%mutate(status="failed")
failed<-failed%>%mutate(status="failed")
bind_rows(passed,failed)
sat
submit()
?separate
submit()
submit()
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/G-CDProyect/run_analysis.R')
getwd()
set.seed(10)
x<-rnorm(100)
f<-rep(0:1,each=50)
f
y<-x+f-f*x+rnorm(100,sd=0.5)
f<-factor(f,labels = c("G1,G2"))
library(lattice)
y
f
f<-factor(f,labels = c("G1","G2"))
f
y
xyplot(y~x|f)
xyplot(y~x|f,layout=c(2,1))
xyplot(y~x|f,layout=c(2,1))
xyplot(y~x|f)
xyplot(y~x|f,panel = function(x,y,...){})
xyplot(y~x|f,panel = function(x,y,...){
panel.xyplot(x,y)
panel.lmline(x,y,col=2)
})
seq(0,1 length=4)
seq(0,1,length = 4)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
gsub("(a+)", "z\\1z", c("abc", "def", "cba a", "aa"), perl=TRUE)
gsub("(a+)", "z\\1z", c("abc", "def", "cba a", "aa"), perl=TRUE)
regmatches(x, m) <- list(c("one"), character(0), c("two", "three"), c("four"))
x <- c("abc", "def", "cba a", "aa")
m <- gregexpr("a+", x, perl=TRUE)
regmatches(x, m) <- list(c("one"), character(0), c("two", "three"), c("four")
)
regmatches(x, m) <- list(c("one"), character(0), c("two", "three"), c("four")
x
x
length(x)
list(c("one"), character(0), c("two", "three"), c("four")
)
x <- c("abc", "def", "cba a", "aa")
m <- gregexpr("a+", x, perl=TRUE)
regmatches(x, m) <- list(c("one"), c("AAAAA"), c("two", "three"), c("four") )
x
library(swirl)
swirl()
dist(dataFrame)
hc<-hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
plot(as.dendrogram(hc),h=1.5,col="blue")
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
5
5
skip()
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=c.colors(25))
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
cmat
points(cx,cy, col=c("red","orange","purple"))
points(cx,cy, col=c("red","orange","purple"),pch=3,cex=,lwd=2)
points(cx,cy, col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
g<-0
points(x,y,pch=19,cex=2,col=cols1[newClust])
cols1
names(cols11)
names(cols1)
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,pch=8,cex=2,lwd=2,col=cols1)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(y,newClust2,mean)
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=8,cex=2,lwd=2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers = 3)
kmObj$iter
kmObj$cluster
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=cex=lwd=3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
l*9
9*0
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
install.packages("kernlab")
setwd("~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo")
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/Trabajo.R')
View(VE1001)
View(VE1002)
View(VE1003)
View(C1)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/ProbabilidadesSemana2.R')
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/CostosS2.R')
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/PS3.R')
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/S3.R')
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/PS4.R')
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/CS4.R')
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/PS5.R')
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/CS5.R')
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/Bellman5.R')
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/OrdenarProbabilidades.R')
View(P41)
Prueba<-Proba(P41,30)
View(Prueba)
View(F5)
source('~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Ing Mercadeo/Bellmans4.R')
View(TempF4)
View(F5)
View(C5)
setwd("~/OneDrive - Universidad de Los Andes/SEXTO SEMESTRE/Data Science/RRCP1")
filezip<-download.file(https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip)
filezip<-download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip")
filezip<-download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",destfile = h.zip)
filezip<-download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",destfile = "temp.zip")
unzip("temp.zip")
actividad<-read.csv("activity.csv")
View(actividad)
hist?
?hist
hist(actividad$steps~actividad$date)
hist(actividad$steps)
pasosdia<-aggregate(actividad,date,sum)
pasosdia<-aggregate(actividad,by=[date],sum)
pasosdia<-aggregate(actividad,by=date,sum)
library(dplyr)
limpios<-actividad[is.na(actividad$steps),]
View(limpios)
View(limpios)
limpios<-actividad[!is.na(actividad$steps),]
limpiosdias<-aggregate(limpios,date,sum)
limpiosdias<-group_by(limpios,date)
View(limpiosdias)
limpiosdias<-group_by(limpios,date,T)
limpiosdias<-group_by(limpios,date,add=T)
View(limpiosdias)
